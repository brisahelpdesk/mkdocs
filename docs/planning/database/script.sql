-- PostgreSQL schema for BRISA Helpdesk system 

-- UUID support extension
CREATE EXTENSION IF NOT EXISTS "pgcrypto";

-- Create dedicated schema
CREATE SCHEMA IF NOT EXISTS sc_helpdesk AUTHORIZATION dba;

-- Use the schema for the session
SET search_path TO sc_helpdesk;

-- User table
CREATE TABLE sc_helpdesk.tb_user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    uuid UUID NOT NULL DEFAULT gen_random_uuid(),
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL
);

-- Role and Privilege structure
CREATE TABLE sc_helpdesk.tb_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE sc_helpdesk.tb_privilege (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE sc_helpdesk.tb_user_role (
    user_id BIGINT NOT NULL,
    role_id BIGINT NOT NULL,
    PRIMARY KEY (user_id, role_id),
    CONSTRAINT fk_tb_user_role_user FOREIGN KEY (user_id) REFERENCES tb_user(id),
    CONSTRAINT fk_tb_user_role_role FOREIGN KEY (role_id) REFERENCES tb_role(id)
);

CREATE TABLE sc_helpdesk.tb_role_privilege (
    role_id BIGINT NOT NULL,
    privilege_id BIGINT NOT NULL,
    PRIMARY KEY (role_id, privilege_id),
    CONSTRAINT fk_tb_role_privilege_role FOREIGN KEY (role_id) REFERENCES tb_role(id),
    CONSTRAINT fk_tb_role_privilege_privilege FOREIGN KEY (privilege_id) REFERENCES tb_privilege(id)
);

-- Address and Phone
CREATE TABLE sc_helpdesk.tb_address (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    street VARCHAR(255) NOT NULL,
    number VARCHAR(20),
    city VARCHAR(100) NOT NULL,
    state VARCHAR(100),
    country VARCHAR(100) NOT NULL,
    zip_code VARCHAR(20)
);

CREATE TABLE sc_helpdesk.tb_phone (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    number VARCHAR(20) NOT NULL,
    type VARCHAR(50)
);

-- Person
CREATE TABLE sc_helpdesk.tb_person (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR(255) NOT NULL,
    birth_date DATE,
    address_id BIGINT UNIQUE,
    CONSTRAINT fk_tb_person_address FOREIGN KEY (address_id) REFERENCES tb_address(id)
);

CREATE TABLE sc_helpdesk.tb_person_phone (
    person_id BIGINT NOT NULL,
    phone_id BIGINT NOT NULL,
    PRIMARY KEY (person_id, phone_id),
    CONSTRAINT fk_tb_person_phone_person FOREIGN KEY (person_id) REFERENCES tb_person(id),
    CONSTRAINT fk_tb_person_phone_phone FOREIGN KEY (phone_id) REFERENCES tb_phone(id)
);

-- Client structure
CREATE TABLE sc_helpdesk.tb_client (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    uuid UUID NOT NULL DEFAULT gen_random_uuid(),
    user_id BIGINT NOT NULL,
    address_id BIGINT,
    CONSTRAINT fk_tb_client_user FOREIGN KEY (user_id) REFERENCES tb_user(id),
    CONSTRAINT fk_tb_client_address FOREIGN KEY (address_id) REFERENCES tb_address(id)
);

CREATE TABLE sc_helpdesk.tb_individual_client (
    client_id BIGINT PRIMARY KEY,
    cpf VARCHAR(14) NOT NULL UNIQUE,
    full_name VARCHAR(255) NOT NULL,
    birth_date DATE,
    CONSTRAINT fk_tb_individual_client FOREIGN KEY (client_id) REFERENCES tb_client(id)
);

CREATE TABLE sc_helpdesk.tb_corporate_client (
    client_id BIGINT PRIMARY KEY,
    cnpj VARCHAR(18) NOT NULL UNIQUE,
    company_name VARCHAR(255) NOT NULL,
    contact_person VARCHAR(255),
    CONSTRAINT fk_tb_corporate_client FOREIGN KEY (client_id) REFERENCES tb_client(id)
);

-- Client-User association
CREATE TABLE sc_helpdesk.tb_client_user (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    uuid UUID NOT NULL DEFAULT gen_random_uuid(),
    user_id BIGINT NOT NULL,
    client_id BIGINT NOT NULL,
    CONSTRAINT fk_tb_client_user_user FOREIGN KEY (user_id) REFERENCES tb_user(id),
    CONSTRAINT fk_tb_client_user_client FOREIGN KEY (client_id) REFERENCES tb_client(id)
);

-- Contract structure
CREATE TABLE sc_helpdesk.tb_contract (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    uuid UUID NOT NULL DEFAULT gen_random_uuid(),
    client_id BIGINT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE,
    description TEXT,
    CONSTRAINT fk_tb_contract_client FOREIGN KEY (client_id) REFERENCES tb_client(id)
);

CREATE TABLE sc_helpdesk.tb_client_user_contract (
    client_user_id BIGINT NOT NULL,
    contract_id BIGINT NOT NULL,
    PRIMARY KEY (client_user_id, contract_id),
    CONSTRAINT fk_tb_client_user_contract_user FOREIGN KEY (client_user_id) REFERENCES tb_client_user(id),
    CONSTRAINT fk_tb_client_user_contract_contract FOREIGN KEY (contract_id) REFERENCES tb_contract(id)
);

-- Catalog
CREATE TABLE sc_helpdesk.tb_catalog_item (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    uuid UUID NOT NULL DEFAULT gen_random_uuid(),
    name VARCHAR(255) NOT NULL,
    description TEXT,
    active BOOLEAN DEFAULT TRUE
);

CREATE TABLE sc_helpdesk.tb_product (
    catalog_item_id BIGINT PRIMARY KEY,
    sku VARCHAR(100) NOT NULL UNIQUE,
    CONSTRAINT fk_tb_product FOREIGN KEY (catalog_item_id) REFERENCES tb_catalog_item(id)
);

CREATE TABLE sc_helpdesk.tb_service (
    catalog_item_id BIGINT PRIMARY KEY,
    service_code VARCHAR(100) NOT NULL UNIQUE,
    CONSTRAINT fk_tb_service FOREIGN KEY (catalog_item_id) REFERENCES tb_catalog_item(id)
);

CREATE TABLE sc_helpdesk.tb_contract_item (
    contract_id BIGINT NOT NULL,
    catalog_item_id BIGINT NOT NULL,
    PRIMARY KEY (contract_id, catalog_item_id),
    CONSTRAINT fk_tb_contract_item_contract FOREIGN KEY (contract_id) REFERENCES tb_contract(id),
    CONSTRAINT fk_tb_contract_item_catalog FOREIGN KEY (catalog_item_id) REFERENCES tb_catalog_item(id)
);

-- Employee
CREATE TABLE sc_helpdesk.tb_job_position (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE sc_helpdesk.tb_employee (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    uuid UUID NOT NULL DEFAULT gen_random_uuid(),
    user_id BIGINT NOT NULL,
    address_id BIGINT,
    supervisor_id BIGINT,
    job_position_id BIGINT,
    CONSTRAINT fk_tb_employee_user FOREIGN KEY (user_id) REFERENCES tb_user(id),
    CONSTRAINT fk_tb_employee_address FOREIGN KEY (address_id) REFERENCES tb_address(id),
    CONSTRAINT fk_tb_employee_supervisor FOREIGN KEY (supervisor_id) REFERENCES tb_employee(id),
    CONSTRAINT fk_tb_employee_job_position FOREIGN KEY (job_position_id) REFERENCES tb_job_position(id)
);

CREATE TABLE sc_helpdesk.tb_oauth_provider (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    url VARCHAR(255)
);

CREATE TABLE sc_helpdesk.tb_security_question (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    question_text VARCHAR(255) NOT NULL UNIQUE
);

ALTER TABLE sc_helpdesk.tb_user
    ADD COLUMN security_question_id BIGINT,
    ADD COLUMN security_answer_hash VARCHAR(255),
    ADD CONSTRAINT fk_tb_user_security_question
        FOREIGN KEY (security_question_id)
        REFERENCES sc_helpdesk.tb_security_question(id);

CREATE TABLE sc_helpdesk.tb_user_oauth_provider (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id BIGINT NOT NULL,
    oauth_provider_id BIGINT NOT NULL,
    external_user_id VARCHAR(255) NOT NULL,
    access_token TEXT,
    refresh_token TEXT,
    token_expiry TIMESTAMP,
    CONSTRAINT fk_tb_user_oauth_user FOREIGN KEY (user_id) REFERENCES sc_helpdesk.tb_user(id),
    CONSTRAINT fk_tb_user_oauth_provider FOREIGN KEY (oauth_provider_id) REFERENCES sc_helpdesk.tb_oauth_provider(id)
);
