-- ** Database generated with pgModeler (PostgreSQL Database Modeler).
-- ** pgModeler version: 1.2.0
-- ** PostgreSQL version: 17.0
-- ** Project Site: pgmodeler.io
-- ** Model Author: Maelton Lima dos Santos

-- ** Database creation must be performed outside a multi lined SQL file. 
-- ** These commands were put in this file only as a convenience.

-- object: "brisa-helpdesk" | type: DATABASE --
-- DROP DATABASE IF EXISTS "brisa-helpdesk";
CREATE DATABASE "brisa-helpdesk"
	ENCODING = 'UTF8'
	LC_COLLATE = 'en_US.utf8'
	LC_CTYPE = 'en_US.utf8'
	TABLESPACE = pg_default
	OWNER = dba;
-- ddl-end --


-- object: sc_helpdesk | type: SCHEMA --
-- DROP SCHEMA IF EXISTS sc_helpdesk CASCADE;
CREATE SCHEMA sc_helpdesk;
-- ddl-end --
ALTER SCHEMA sc_helpdesk OWNER TO dba;
-- ddl-end --

SET search_path TO pg_catalog,public,sc_helpdesk;
-- ddl-end --

-- object: pgcrypto | type: EXTENSION --
-- DROP EXTENSION IF EXISTS pgcrypto CASCADE;
CREATE EXTENSION pgcrypto
WITH SCHEMA public
VERSION '1.3';
-- ddl-end --
COMMENT ON EXTENSION pgcrypto IS E'cryptographic functions';
-- ddl-end --

-- object: sc_helpdesk.tb_user | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_user CASCADE;
CREATE TABLE sc_helpdesk.tb_user (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	uuid uuid NOT NULL DEFAULT gen_random_uuid(),
	email character varying(255) NOT NULL,
	password_hash character varying(255) NOT NULL,
	security_question_id bigint,
	security_answer_hash character varying(255),
	CONSTRAINT tb_user_pkey PRIMARY KEY (id),
	CONSTRAINT tb_user_email_key UNIQUE (email)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_user OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_role | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_role CASCADE;
CREATE TABLE sc_helpdesk.tb_role (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	name character varying(100) NOT NULL,
	CONSTRAINT tb_role_pkey PRIMARY KEY (id),
	CONSTRAINT tb_role_name_key UNIQUE (name)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_role OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_privilege | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_privilege CASCADE;
CREATE TABLE sc_helpdesk.tb_privilege (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	name character varying(100) NOT NULL,
	CONSTRAINT tb_privilege_pkey PRIMARY KEY (id),
	CONSTRAINT tb_privilege_name_key UNIQUE (name)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_privilege OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_user_role | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_user_role CASCADE;
CREATE TABLE sc_helpdesk.tb_user_role (
	user_id bigint NOT NULL,
	role_id bigint NOT NULL,
	CONSTRAINT tb_user_role_pkey PRIMARY KEY (user_id,role_id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_user_role OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_role_privilege | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_role_privilege CASCADE;
CREATE TABLE sc_helpdesk.tb_role_privilege (
	role_id bigint NOT NULL,
	privilege_id bigint NOT NULL,
	CONSTRAINT tb_role_privilege_pkey PRIMARY KEY (role_id,privilege_id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_role_privilege OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_address | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_address CASCADE;
CREATE TABLE sc_helpdesk.tb_address (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	street character varying(255) NOT NULL,
	number character varying(20),
	city character varying(100) NOT NULL,
	state character varying(100),
	country character varying(100) NOT NULL,
	zip_code character varying(20),
	CONSTRAINT tb_address_pkey PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_address OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_phone | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_phone CASCADE;
CREATE TABLE sc_helpdesk.tb_phone (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	number character varying(20) NOT NULL,
	type character varying(50),
	CONSTRAINT tb_phone_pkey PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_phone OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_person | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_person CASCADE;
CREATE TABLE sc_helpdesk.tb_person (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	full_name character varying(255) NOT NULL,
	birth_date date,
	address_id bigint,
	CONSTRAINT tb_person_pkey PRIMARY KEY (id),
	CONSTRAINT tb_person_address_id_key UNIQUE (address_id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_person OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_person_phone | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_person_phone CASCADE;
CREATE TABLE sc_helpdesk.tb_person_phone (
	person_id bigint NOT NULL,
	phone_id bigint NOT NULL,
	CONSTRAINT tb_person_phone_pkey PRIMARY KEY (person_id,phone_id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_person_phone OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_client | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_client CASCADE;
CREATE TABLE sc_helpdesk.tb_client (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	uuid uuid NOT NULL DEFAULT gen_random_uuid(),
	user_id bigint NOT NULL,
	address_id bigint,
	CONSTRAINT tb_client_pkey PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_client OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_individual_client | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_individual_client CASCADE;
CREATE TABLE sc_helpdesk.tb_individual_client (
	client_id bigint NOT NULL,
	cpf character varying(14) NOT NULL,
	full_name character varying(255) NOT NULL,
	birth_date date,
	CONSTRAINT tb_individual_client_pkey PRIMARY KEY (client_id),
	CONSTRAINT tb_individual_client_cpf_key UNIQUE (cpf)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_individual_client OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_corporate_client | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_corporate_client CASCADE;
CREATE TABLE sc_helpdesk.tb_corporate_client (
	client_id bigint NOT NULL,
	cnpj character varying(18) NOT NULL,
	company_name character varying(255) NOT NULL,
	contact_person character varying(255),
	CONSTRAINT tb_corporate_client_pkey PRIMARY KEY (client_id),
	CONSTRAINT tb_corporate_client_cnpj_key UNIQUE (cnpj)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_corporate_client OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_client_user | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_client_user CASCADE;
CREATE TABLE sc_helpdesk.tb_client_user (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	uuid uuid NOT NULL DEFAULT gen_random_uuid(),
	user_id bigint NOT NULL,
	client_id bigint NOT NULL,
	CONSTRAINT tb_client_user_pkey PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_client_user OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_contract | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_contract CASCADE;
CREATE TABLE sc_helpdesk.tb_contract (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	uuid uuid NOT NULL DEFAULT gen_random_uuid(),
	client_id bigint NOT NULL,
	start_date date NOT NULL,
	end_date date,
	description text,
	CONSTRAINT tb_contract_pkey PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_contract OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_client_user_contract | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_client_user_contract CASCADE;
CREATE TABLE sc_helpdesk.tb_client_user_contract (
	client_user_id bigint NOT NULL,
	contract_id bigint NOT NULL,
	CONSTRAINT tb_client_user_contract_pkey PRIMARY KEY (client_user_id,contract_id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_client_user_contract OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_catalog_item | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_catalog_item CASCADE;
CREATE TABLE sc_helpdesk.tb_catalog_item (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	uuid uuid NOT NULL DEFAULT gen_random_uuid(),
	name character varying(255) NOT NULL,
	description text,
	active boolean DEFAULT true,
	CONSTRAINT tb_catalog_item_pkey PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_catalog_item OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_product | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_product CASCADE;
CREATE TABLE sc_helpdesk.tb_product (
	catalog_item_id bigint NOT NULL,
	sku character varying(100) NOT NULL,
	CONSTRAINT tb_product_pkey PRIMARY KEY (catalog_item_id),
	CONSTRAINT tb_product_sku_key UNIQUE (sku)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_product OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_service | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_service CASCADE;
CREATE TABLE sc_helpdesk.tb_service (
	catalog_item_id bigint NOT NULL,
	service_code character varying(100) NOT NULL,
	CONSTRAINT tb_service_pkey PRIMARY KEY (catalog_item_id),
	CONSTRAINT tb_service_service_code_key UNIQUE (service_code)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_service OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_contract_item | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_contract_item CASCADE;
CREATE TABLE sc_helpdesk.tb_contract_item (
	contract_id bigint NOT NULL,
	catalog_item_id bigint NOT NULL,
	CONSTRAINT tb_contract_item_pkey PRIMARY KEY (contract_id,catalog_item_id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_contract_item OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_job_position | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_job_position CASCADE;
CREATE TABLE sc_helpdesk.tb_job_position (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	title character varying(100) NOT NULL,
	CONSTRAINT tb_job_position_pkey PRIMARY KEY (id),
	CONSTRAINT tb_job_position_title_key UNIQUE (title)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_job_position OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_employee | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_employee CASCADE;
CREATE TABLE sc_helpdesk.tb_employee (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	uuid uuid NOT NULL DEFAULT gen_random_uuid(),
	user_id bigint NOT NULL,
	address_id bigint,
	supervisor_id bigint,
	job_position_id bigint,
	CONSTRAINT tb_employee_pkey PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_employee OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_oauth_provider | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_oauth_provider CASCADE;
CREATE TABLE sc_helpdesk.tb_oauth_provider (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	name character varying(100) NOT NULL,
	url character varying(255),
	CONSTRAINT tb_oauth_provider_pkey PRIMARY KEY (id),
	CONSTRAINT tb_oauth_provider_name_key UNIQUE (name)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_oauth_provider OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_security_question | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_security_question CASCADE;
CREATE TABLE sc_helpdesk.tb_security_question (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	question_text character varying(255) NOT NULL,
	CONSTRAINT tb_security_question_pkey PRIMARY KEY (id),
	CONSTRAINT tb_security_question_question_text_key UNIQUE (question_text)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_security_question OWNER TO dba;
-- ddl-end --

-- object: sc_helpdesk.tb_user_oauth_provider | type: TABLE --
-- DROP TABLE IF EXISTS sc_helpdesk.tb_user_oauth_provider CASCADE;
CREATE TABLE sc_helpdesk.tb_user_oauth_provider (
	id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1 ),
	user_id bigint NOT NULL,
	oauth_provider_id bigint NOT NULL,
	external_user_id character varying(255) NOT NULL,
	access_token text,
	refresh_token text,
	token_expiry timestamp,
	CONSTRAINT tb_user_oauth_provider_pkey PRIMARY KEY (id)
);
-- ddl-end --
ALTER TABLE sc_helpdesk.tb_user_oauth_provider OWNER TO dba;
-- ddl-end --

-- object: fk_tb_user_security_question | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_user DROP CONSTRAINT IF EXISTS fk_tb_user_security_question CASCADE;
ALTER TABLE sc_helpdesk.tb_user ADD CONSTRAINT fk_tb_user_security_question FOREIGN KEY (security_question_id)
REFERENCES sc_helpdesk.tb_security_question (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_user_role_user | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_user_role DROP CONSTRAINT IF EXISTS fk_tb_user_role_user CASCADE;
ALTER TABLE sc_helpdesk.tb_user_role ADD CONSTRAINT fk_tb_user_role_user FOREIGN KEY (user_id)
REFERENCES sc_helpdesk.tb_user (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_user_role_role | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_user_role DROP CONSTRAINT IF EXISTS fk_tb_user_role_role CASCADE;
ALTER TABLE sc_helpdesk.tb_user_role ADD CONSTRAINT fk_tb_user_role_role FOREIGN KEY (role_id)
REFERENCES sc_helpdesk.tb_role (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_role_privilege_role | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_role_privilege DROP CONSTRAINT IF EXISTS fk_tb_role_privilege_role CASCADE;
ALTER TABLE sc_helpdesk.tb_role_privilege ADD CONSTRAINT fk_tb_role_privilege_role FOREIGN KEY (role_id)
REFERENCES sc_helpdesk.tb_role (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_role_privilege_privilege | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_role_privilege DROP CONSTRAINT IF EXISTS fk_tb_role_privilege_privilege CASCADE;
ALTER TABLE sc_helpdesk.tb_role_privilege ADD CONSTRAINT fk_tb_role_privilege_privilege FOREIGN KEY (privilege_id)
REFERENCES sc_helpdesk.tb_privilege (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_person_address | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_person DROP CONSTRAINT IF EXISTS fk_tb_person_address CASCADE;
ALTER TABLE sc_helpdesk.tb_person ADD CONSTRAINT fk_tb_person_address FOREIGN KEY (address_id)
REFERENCES sc_helpdesk.tb_address (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_person_phone_person | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_person_phone DROP CONSTRAINT IF EXISTS fk_tb_person_phone_person CASCADE;
ALTER TABLE sc_helpdesk.tb_person_phone ADD CONSTRAINT fk_tb_person_phone_person FOREIGN KEY (person_id)
REFERENCES sc_helpdesk.tb_person (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_person_phone_phone | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_person_phone DROP CONSTRAINT IF EXISTS fk_tb_person_phone_phone CASCADE;
ALTER TABLE sc_helpdesk.tb_person_phone ADD CONSTRAINT fk_tb_person_phone_phone FOREIGN KEY (phone_id)
REFERENCES sc_helpdesk.tb_phone (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_client_user | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_client DROP CONSTRAINT IF EXISTS fk_tb_client_user CASCADE;
ALTER TABLE sc_helpdesk.tb_client ADD CONSTRAINT fk_tb_client_user FOREIGN KEY (user_id)
REFERENCES sc_helpdesk.tb_user (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_client_address | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_client DROP CONSTRAINT IF EXISTS fk_tb_client_address CASCADE;
ALTER TABLE sc_helpdesk.tb_client ADD CONSTRAINT fk_tb_client_address FOREIGN KEY (address_id)
REFERENCES sc_helpdesk.tb_address (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_individual_client | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_individual_client DROP CONSTRAINT IF EXISTS fk_tb_individual_client CASCADE;
ALTER TABLE sc_helpdesk.tb_individual_client ADD CONSTRAINT fk_tb_individual_client FOREIGN KEY (client_id)
REFERENCES sc_helpdesk.tb_client (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_corporate_client | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_corporate_client DROP CONSTRAINT IF EXISTS fk_tb_corporate_client CASCADE;
ALTER TABLE sc_helpdesk.tb_corporate_client ADD CONSTRAINT fk_tb_corporate_client FOREIGN KEY (client_id)
REFERENCES sc_helpdesk.tb_client (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_client_user_user | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_client_user DROP CONSTRAINT IF EXISTS fk_tb_client_user_user CASCADE;
ALTER TABLE sc_helpdesk.tb_client_user ADD CONSTRAINT fk_tb_client_user_user FOREIGN KEY (user_id)
REFERENCES sc_helpdesk.tb_user (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_client_user_client | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_client_user DROP CONSTRAINT IF EXISTS fk_tb_client_user_client CASCADE;
ALTER TABLE sc_helpdesk.tb_client_user ADD CONSTRAINT fk_tb_client_user_client FOREIGN KEY (client_id)
REFERENCES sc_helpdesk.tb_client (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_contract_client | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_contract DROP CONSTRAINT IF EXISTS fk_tb_contract_client CASCADE;
ALTER TABLE sc_helpdesk.tb_contract ADD CONSTRAINT fk_tb_contract_client FOREIGN KEY (client_id)
REFERENCES sc_helpdesk.tb_client (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_client_user_contract_user | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_client_user_contract DROP CONSTRAINT IF EXISTS fk_tb_client_user_contract_user CASCADE;
ALTER TABLE sc_helpdesk.tb_client_user_contract ADD CONSTRAINT fk_tb_client_user_contract_user FOREIGN KEY (client_user_id)
REFERENCES sc_helpdesk.tb_client_user (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_client_user_contract_contract | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_client_user_contract DROP CONSTRAINT IF EXISTS fk_tb_client_user_contract_contract CASCADE;
ALTER TABLE sc_helpdesk.tb_client_user_contract ADD CONSTRAINT fk_tb_client_user_contract_contract FOREIGN KEY (contract_id)
REFERENCES sc_helpdesk.tb_contract (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_product | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_product DROP CONSTRAINT IF EXISTS fk_tb_product CASCADE;
ALTER TABLE sc_helpdesk.tb_product ADD CONSTRAINT fk_tb_product FOREIGN KEY (catalog_item_id)
REFERENCES sc_helpdesk.tb_catalog_item (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_service | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_service DROP CONSTRAINT IF EXISTS fk_tb_service CASCADE;
ALTER TABLE sc_helpdesk.tb_service ADD CONSTRAINT fk_tb_service FOREIGN KEY (catalog_item_id)
REFERENCES sc_helpdesk.tb_catalog_item (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_contract_item_contract | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_contract_item DROP CONSTRAINT IF EXISTS fk_tb_contract_item_contract CASCADE;
ALTER TABLE sc_helpdesk.tb_contract_item ADD CONSTRAINT fk_tb_contract_item_contract FOREIGN KEY (contract_id)
REFERENCES sc_helpdesk.tb_contract (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_contract_item_catalog | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_contract_item DROP CONSTRAINT IF EXISTS fk_tb_contract_item_catalog CASCADE;
ALTER TABLE sc_helpdesk.tb_contract_item ADD CONSTRAINT fk_tb_contract_item_catalog FOREIGN KEY (catalog_item_id)
REFERENCES sc_helpdesk.tb_catalog_item (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_employee_user | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_employee DROP CONSTRAINT IF EXISTS fk_tb_employee_user CASCADE;
ALTER TABLE sc_helpdesk.tb_employee ADD CONSTRAINT fk_tb_employee_user FOREIGN KEY (user_id)
REFERENCES sc_helpdesk.tb_user (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_employee_address | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_employee DROP CONSTRAINT IF EXISTS fk_tb_employee_address CASCADE;
ALTER TABLE sc_helpdesk.tb_employee ADD CONSTRAINT fk_tb_employee_address FOREIGN KEY (address_id)
REFERENCES sc_helpdesk.tb_address (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_employee_supervisor | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_employee DROP CONSTRAINT IF EXISTS fk_tb_employee_supervisor CASCADE;
ALTER TABLE sc_helpdesk.tb_employee ADD CONSTRAINT fk_tb_employee_supervisor FOREIGN KEY (supervisor_id)
REFERENCES sc_helpdesk.tb_employee (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_employee_job_position | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_employee DROP CONSTRAINT IF EXISTS fk_tb_employee_job_position CASCADE;
ALTER TABLE sc_helpdesk.tb_employee ADD CONSTRAINT fk_tb_employee_job_position FOREIGN KEY (job_position_id)
REFERENCES sc_helpdesk.tb_job_position (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_user_oauth_user | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_user_oauth_provider DROP CONSTRAINT IF EXISTS fk_tb_user_oauth_user CASCADE;
ALTER TABLE sc_helpdesk.tb_user_oauth_provider ADD CONSTRAINT fk_tb_user_oauth_user FOREIGN KEY (user_id)
REFERENCES sc_helpdesk.tb_user (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --

-- object: fk_tb_user_oauth_provider | type: CONSTRAINT --
-- ALTER TABLE sc_helpdesk.tb_user_oauth_provider DROP CONSTRAINT IF EXISTS fk_tb_user_oauth_provider CASCADE;
ALTER TABLE sc_helpdesk.tb_user_oauth_provider ADD CONSTRAINT fk_tb_user_oauth_provider FOREIGN KEY (oauth_provider_id)
REFERENCES sc_helpdesk.tb_oauth_provider (id) MATCH SIMPLE
ON DELETE NO ACTION ON UPDATE NO ACTION;
-- ddl-end --


